import java.time.Duration
import java.util.concurrent.TimeUnit

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */


buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        google()
    }
}

plugins {
    id 'cn.spider.java-application-conventions'
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        google()
    }
    dependencies {
        implementation 'org.apache.commons:commons-text:1.9'
        implementation project(':utilities')
        testImplementation 'junit:junit:4.+'
        implementation 'org.beryx:text-io:3.4.1'
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
        implementation 'org.slf4j:slf4j-api:2.0.0-alpha1'
        implementation 'org.slf4j:slf4j-log4j12:2.0.0-alpha1'
        implementation 'org.apache.logging.log4j:log4j:2.14.1'
    }
}


application {
    // Define the main class for the application.
    mainClass = 'cn.spider.app.intl.Survey'
}


test {
    useJUnit()
}

//println '------------------'
//println 'starting config...'
//println '------------------'

//define task
//gradle -q hello
//-q clear log
tasks.register('hello') {
    doLast {
        println 'hello task last...'
    }
    doFirst {
        println 'hello task first...'
    }
}

tasks.register('upper') {
    String someThing = 'My_Name'
    println "Original: " + someThing
    println "Upper case: ${someThing.toUpperCase()}"
}

tasks.register('count') {
    5.times { print "$it " }
    println ''
}

//tasks.register('intro') {
//    dependsOn tasks.helloFastTask
//    println 'I`m spider!'
//}

//lazy dependsOn
tasks.register('taskX') {
    dependsOn 'taskY'
    doLast {
        println 'taskX'
    }
}
tasks.register('taskY') {
    doLast {
        println 'taskY'
    }
}


//flexible task registration
5.times {
    counter ->
        tasks.register("task$counter") {
            doLast {
                println "I`m task number $counter"
            }
        }
}

//accessed registered task as API
tasks.named('task0') {
    dependsOn('task2', 'task3')
}

//enhance existing task eg:hello
tasks.named('hello') {
    doFirst {
        println 'enhance task hello AT last...'
    }
    timout = Duration.ofMinutes(10)
    TimeUnit.SECONDS.sleep(2)
}


//project.afterEvaluate {
//    println '--------------'
//    println 'config over...'
//    println '--------------'
//}

